

#pragma once
#include "Market.h"
#include "DoublySortedLinkedList.h"

/**===========================================AppliCation 클래스================================================================================
*	@author 조영제
*	@date 2014/10/14
*	@brief Application 클래스( Market의 상위클래스 ) - 마켓의 기본기능 재정의 및 예외처리를 구현 및 인터페이스 출력을 위한 클래스
*	@details 상품 등록, 상품 입고, 상품 주문, 상품 삭제, 상품 검색, 등록 상품 출력 등을 재정의 하고 예외처리 및 인터페이스 출력 클래스
*===============================================================================================================================================*/
class AppliCation
{
public:
	/**========================================================================================================================================
	* Application 생성자
	===========================================================================================================================================*/
	AppliCation(){};

	/**=========================================================================================================================================
	* Application 소멸자
	===========================================================================================================================================*/
	~AppliCation(){};

	/**===========================================================================================================================================
	*	마켓 시스템에 인터페이스를 출력한다.
	*	@brief	사용자가 마켓 기능을 수행하기 위해 필요한 인터페이스 함수이다.
	*	@pre	키보드로 input_Command를 입력 받아와야한다.
	*	@post	없다.
	*   @return 키보드로 입력한 숫자를 출력하게 된다.
	===========================================================================================================================================*/
	int get_Command(); /// 인터페이스 출력 및 키보드로 입력받는 숫자를 리턴받음

	/**===========================================================================================================================================
	*	입력 변수에 따른 각 기능을 수행하는 함수이다  
	*	@brief	상품 관리 목록 - 1.상품등록 2.상품입고 3.상품주문 4.상품삭제 5.상품검색 6.상품출력 으로 이루어져있다. // 판매 관리 목록- 1.상품판매 2.판매목록 출력 3.상품환불
	*	@pre	get_Command() 함수가 시행되어야 한다.
	*	@post	input_Command에 따른 기능을 출력하게 된다.
	============================================================================================================================================*/
	void print_Start();

	/**===========================================================================================================================================
	*	Market에 있는 물품등록을 호출하는 함수이다.
	*	@brief	market.EnProduct()를 불러와 상품등록을 수행하기 위한 함수이다.
	*	@pre	Command==1 / input_Command==1 성립해야한다.
	*	@post	market.EnProduct()의 리턴값에 따른 출력문을 출력하게 된다.
	============================================================================================================================================*/
	void AppEnProduct();

	/**============================================================================================================================================
	*	@brief	market.PlusProduct()를 불러와 상품구매를 수행하기 위한 함수이다.
	*	@pre	Command==1 / input_Command==2 성립해야한다.
	*	@post	market.PlusProduct()의 리턴값에 따른 출력문을 출력하게 된다.
	=============================================================================================================================================*/
	void AppPlusProduct();/// 상품 입고 (상품 잔고개수 증가)

	/**============================================================================================================================================
	*	@brief	market.orderProduct()를 불러와 상품주문을 수행하기 위한 함수이다.
	*	@pre	Command==1 / input_Command==3 성립해야한다.
	*	@post	market.orderProduct()의 리턴값에 따른 출력문을 출력하게 된다.
	==============================================================================================================================================*/
	void ApporderProduct();/// 상품 주문 (주문량 증가)

	/**============================================================================================================================================
	*	@brief	market.DeleteProduct()를 불러와 상품삭제을 수행하기 위한 함수이다.
	*	@pre	Command==1 /input_Command==4 성립해야한다.
	*	@post	market.DeleteProduct()의 리턴값에 따른 출력문을 출력하게 된다.
	==============================================================================================================================================*/
	void AppDeleteProduct();/// 상품 삭제 (기존 상품 삭제)

	/**============================================================================================================================================
	*	@brief	market.SearchProduct()를 불러와 상품검색을 수행하기 위한 함수이다.
	*	@pre	Command==1 /input_Command==5 성립해야한다.
	*	@post	market.SearchProduct()의 리턴값에 따른 출력문을 출력하게 된다.
	==============================================================================================================================================*/
	void AppSearchProduct();/// 상품 검색 

	/**============================================================================================================================================
	*	@brief	market.printProduct()를 불러와 상품출력을 수행하기 위한 함수이다.
	*	@pre	Command==1 /input_Command==6 성립해야한다.
	*	@post	market.printProduct()의 리턴값에 따른 출력문을 출력하게 된다.
	==============================================================================================================================================*/
	void AppprintProduct();/// 등록 상품 출력

	/**============================================================================================================================================
	*	@brief	market.sellProduct()를 불러와 상품판매를 수행하기 위한 함수이다.
	*	@pre	Command==2 / input_Command==1 성립해야한다.
	*	@post	market.sellProduct()의 리턴값에 따른 출력문을 출력하게 된다.
	==============================================================================================================================================*/
	void AppsellProduct(); /// 상품 판매

	/**============================================================================================================================================
	*	@brief	market.sell_PrintProduct()를 불러와 상품판매를 수행하기 위한 함수이다.
	*	@pre	Command==2 / input_Command==2 성립해야한다.
	*	@post	market.sell_PrintProduct()의 리턴값에 따른 출력문을 출력하게 된다.
	==============================================================================================================================================*/
	void Appsell_printProduct();/// 상품 판매 목록 출력

	/**============================================================================================================================================
	*	@brief	market.sell_ProductRefund()를 불러와 상품판매를 수행하기 위한 함수이다.
	*	@pre	Command==2 / input_Command==3 성립해야한다.
	*	@post	market.sell_ProductRefund()의 리턴값에 따른 출력문을 출력하게 된다.
	==============================================================================================================================================*/
	void Appsell_refundProduct(); // 상품 환불

	/**============================================================================================================================================
	*	@brief	상품관리 메뉴목록을 출력한다.
	*	@pre	없다.
	*	@post	키보드로 입력받은 명령받은 입력 변수를 리턴한다.
	==============================================================================================================================================*/
	int print_product_menu();

	/**============================================================================================================================================
	*	@brief	상품판매 메뉴목록을 출력한다.
	*	@pre	없다.
	*	@post	키보드로 입력받은 명령받은 입력 변수를 리턴한다.
	==============================================================================================================================================*/
	int sell_product_menu();

	/**============================================================================================================================================
	*	@brief	메뉴에서 잘못입력했을때 에러문을 출력하는 구문이다..
	*	@pre	없다.
	*	@post	에러메세지를 화면에 띄운다
	==============================================================================================================================================*/
	void print_error() 
	{ 
		cout<< "\n\t < 잘못된 메뉴 입력 > ";
		system("pause");
	}
	/**============================================================================================================================================
	*	@brief	판매상품목록을 출력한다.
	*	@pre	상품이 판매되어 있어야 한다
	*	@post	키보드로 입력받은 이름과 같은 판매상품을 리턴한다.
	==============================================================================================================================================*/
	void Appsearch_sell_product(); // 판매상품 검색


private:
	Market market; ///< Market 클래스의 객체
	int input_Command;  ///< 키보드로 메뉴값을 입력받기 위해 필요한 변수
	bool check;
};

